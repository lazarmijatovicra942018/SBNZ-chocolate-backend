package rules.forward_chaining;
import demo.facts.Item;
import demo.facts.Chocolate;
import demo.facts.User;
import demo.facts.UserRank;

rule "Discount for 5-9  candies"
    agenda-group "discount"
    when
        $c: Chocolate(ammount>4 , ammount< 10 )
    then
        modify($c){setDiscount($c.getDiscount()+5)};
end

rule "Discount for 10-19  candies"
    agenda-group "discount"
    when
        $c: Chocolate(ammount>9 , ammount< 20)
    then
        modify($c){setDiscount($c.getDiscount()+10)};
end


rule "Discount for 20 and more candies"
    agenda-group "discount"
    when
        $c: Chocolate( 19<ammount )
    then
        modify($c){setDiscount($c.getDiscount()+15)};
end



rule "Discount for bronze user"
    agenda-group "discount"
    when
        $c: Chocolate()
        $u:User(userRank == UserRank.BRONZE)

    then
        modify($c){setDiscount($c.getDiscount()+3)};
end

rule "Discount for silver user"
    agenda-group "discount"
    when
        $c: Chocolate()
        $u:User(userRank == UserRank.SILVER)

    then
        modify($c){setDiscount($c.getDiscount()+5)};
end


rule "Discount for gold user"
    agenda-group "discount"
    when
        $c: Chocolate()
        $u:User(userRank == UserRank.GOLD)

    then
        modify($c){setDiscount($c.getDiscount()+7)};
end


rule "Discount for platinum user"
    agenda-group "discount"
    when
        $c: Chocolate()
        $u:User(userRank == UserRank.PLATINUM)

    then
        modify($c){setDiscount($c.getDiscount()+10)};
end



rule "Calculating new price"
    salience -5
    agenda-group "discount"
    when
        $c: Chocolate(discount>0)
    then
        modify($c){setPrice($c.getPrice()*(100-$c.getDiscount())/100)};
end


